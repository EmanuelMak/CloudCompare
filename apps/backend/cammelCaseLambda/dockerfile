# Stage 1: Build the application with Maven
FROM maven:3.8.2-openjdk-17-slim as builder


# auth for registry
ARG GIT_GITLAB_TOKEN
ARG GIT_GITLAB_BASE_URL
ARG GIT_GITLAB_CLOUDCOMPARE_ID

# Convert build arguments to environment variables
ENV GIT_GITLAB_TOKEN=$GIT_GITLAB_TOKEN
ENV GIT_GITLAB_BASE_URL=$GIT_GITLAB_BASE_URL
ENV GIT_GITLAB_CLOUDCOMPARE_ID=$GIT_GITLAB_CLOUDCOMPARE_ID

COPY settings.xml /root/.m2/ 
RUN chmod 777 /root/.m2/settings.xml



# Copy the project files to the container
COPY ./pom.xml ./pom.xml
COPY ./src ./src

# Build the project and package the jar with dependencies
#RUN mvn clean package -Dmaven.test.skip=true -s /root/.m2/settings.xml
RUN mvn compile dependency:copy-dependencies -DincludeScope=runtime -s /root/.m2/settings.xml
# Stage 2: Setup the runtime environment
FROM public.ecr.aws/lambda/java:17

# Copy function code and runtime dependencies from Maven layout
COPY --from=builder target/classes ${LAMBDA_TASK_ROOT}
COPY --from=builder target/dependency/* ${LAMBDA_TASK_ROOT}/lib/

# Set the CMD to your handler (update with your handler's name)
CMD [ "de.th.ro.thesis.emanuel.cloudCompare.MyLambdaHandler::handleRequest" ]
