<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="continuous Requests Lambda" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="CSV_FILE_PATH" elementType="Argument">
            <stringProp name="Argument.name">CSV_FILE_PATH</stringProp>
            <stringProp name="Argument.value">${__P(csvFilePath,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_APPLICATION" elementType="Argument">
            <stringProp name="Argument.name">TEST_APPLICATION</stringProp>
            <stringProp name="Argument.value">${__P(testScenario,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_TYPE" elementType="Argument">
            <stringProp name="Argument.name">TEST_TYPE</stringProp>
            <stringProp name="Argument.value">${__P(testType,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="REQ_AMOUNT" elementType="Argument">
            <stringProp name="Argument.name">REQ_AMOUNT</stringProp>
            <stringProp name="Argument.value">${__P(reqAmount,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_EXECUTION_TIME" elementType="Argument">
            <stringProp name="Argument.name">TEST_EXECUTION_TIME</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">${__P(executionTime,)}</stringProp>
          </elementProp>
          <elementProp name="LAMBDA_BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">LAMBDA_BASE_URL</stringProp>
            <stringProp name="Argument.value">${__P{baseUrl,}}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DATA_WRITER_PATH" elementType="Argument">
            <stringProp name="Argument.value">${__P{simpleDataWriterPath,}}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.name">DATA_WRITER_PATH</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="contiuous requests aws lambda" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${TEST_EXECUTION_TIME}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">log.info(&quot;CSV_FILE_PATH: &quot; + vars.get(&quot;CSV_FILE_PATH&quot;))
log.info(&quot;TEST_APPLICATION: &quot; + vars.get(&quot;TEST_APPLICATION&quot;))
log.info(&quot;TEST_TYPE: &quot; + vars.get(&quot;TEST_TYPE&quot;))
log.info(&quot;REQ_AMOUNT: &quot; + vars.get(&quot;REQ_AMOUNT&quot;))
log.info(&quot;TEST_EXECUTION_TIME: &quot; + vars.get(&quot;TEST_EXECUTION_TIME&quot;))
OUT.println (&quot;CSV_FILE_PATH: &quot; + vars.get(&quot;CSV_FILE_PATH&quot;))
OUT.println(&quot;TEST_APPLICATION: &quot; + vars.get(&quot;TEST_APPLICATION&quot;))
OUT.println(&quot;TEST_TYPE: &quot; + vars.get(&quot;TEST_TYPE&quot;))
OUT.println(&quot;REQ_AMOUNT: &quot; + vars.get(&quot;REQ_AMOUNT&quot;))
OUT.println(&quot;TEST_EXECUTION_TIME: &quot; + vars.get(&quot;TEST_EXECUTION_TIME&quot;))</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
          <stringProp name="IfController.condition">${__groovy(&quot;${TEST_TYPE}&quot; == &quot;continuousreq&quot;)}</stringProp>
        </IfController>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <intProp name="calcMode">2</intProp>
            <stringProp name="throughput">${__groovy((Integer.parseInt(vars.get(&apos;REQ_AMOUNT&apos;)) / (Integer.parseInt(vars.get(&apos;TEST_EXECUTION_TIME&apos;)) * 60)),)}</stringProp>
          </ConstantThroughputTimer>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-34272110">continuous Requests Lambda</stringProp>
              <stringProp name="170071582">Test Fragment</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="maxLoadGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">log.info(&quot;CSV_FILE_PATH: &quot; + vars.get(&quot;CSV_FILE_PATH&quot;))
log.info(&quot;TEST_APPLICATION: &quot; + vars.get(&quot;TEST_APPLICATION&quot;))
log.info(&quot;TEST_TYPE: &quot; + vars.get(&quot;TEST_TYPE&quot;))
log.info(&quot;REQ_AMOUNT: &quot; + vars.get(&quot;REQ_AMOUNT&quot;))
log.info(&quot;TEST_EXECUTION_TIME: &quot; + vars.get(&quot;TEST_EXECUTION_TIME&quot;))
OUT.println(&quot;CSV_FILE_PATH: &quot; + vars.get(&quot;CSV_FILE_PATH&quot;))
OUT.println(&quot;TEST_APPLICATION: &quot; + vars.get(&quot;TEST_APPLICATION&quot;))
OUT.println(&quot;TEST_TYPE: &quot; + vars.get(&quot;TEST_TYPE&quot;))
OUT.println(&quot;REQ_AMOUNT: &quot; + vars.get(&quot;REQ_AMOUNT&quot;))
OUT.println(&quot;TEST_EXECUTION_TIME: &quot; + vars.get(&quot;TEST_EXECUTION_TIME&quot;))</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
          <stringProp name="IfController.condition">${__groovy(&quot;${TEST_TYPE}&quot; == &quot;maxLoad&quot;)}</stringProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-34272110">continuous Requests Lambda</stringProp>
              <stringProp name="170071582">Test Fragment</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="true"/>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">log.info(&quot;executing tests ...&quot;)
OUT.println(&quot;executing tests ...&quot;)</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="ifCamelcase" enabled="true">
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
          <stringProp name="IfController.condition">${__groovy(&quot;${TEST_APPLICATION}&quot; == &quot;camelcase&quot;)}</stringProp>
        </IfController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">${CSV_FILE_PATH}</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">SENTENCE</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${LAMBDA_BASE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.path">/camelcase?text=${SENTENCE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">log.info(&quot;executing camel case request&quot;)</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="ifCheckPrime" enabled="true">
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
          <stringProp name="IfController.condition">${__groovy(&quot;${TEST_APPLICATION}&quot; == &quot;checkprime&quot;)}</stringProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/checkprime?number=${randNumber}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">int min = 9999
int max = 999999
int randomNum = min + new Random().nextInt(max - min + 1)
vars.put(&quot;randNumber&quot;, randomNum.toString())
log.info(&quot;Generated Random Number: &quot; + randomNum)</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
        <stringProp name="scriptLanguage">groovy</stringProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="cacheKey">true</stringProp>
        <stringProp name="script">log.info(&quot;this is my test log&quot;)
OUT.println(&quot;this is my test log&quot;)</stringProp>
      </JSR223PreProcessor>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
